---
title: Knot.x Homepage
description: Knot.x connects CMS, CRM or other web platforms to create a unified customer experience.
home: true
layout: default
---

<div class="flex homepage">
  <div class="index-header" id="content">
    <div class="container">
      <div class="banner text-center">
        <h1>Knot.x</h1>
        <h2>Connects <strong>CMS, CRM</strong> or other web platforms<br/>
          to create a <strong>unified customer experience.</strong></h2>
        <span class="github-btn">
          <iframe src="https://ghbtns.com/github-btn.html?user=Cognifide&amp;repo=knotx&amp;type=star&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="160" height="30">
          </iframe>
        </span>
        <span class="github-btn">
          <iframe src="https://ghbtns.com/github-btn.html?user=Cognifide&amp;repo=knotx&amp;type=fork&amp;count=true&amp;size=large" frameborder="0" scrolling="0" width="160" height="30">
          </iframe>
        </span>
      </div>
    </div>
  </div>

  <!-- Intro -->
  <div class="feature intro">
    <div class="container">
      <div class="row">
        <div class="col-sm-6">
          <div class="knotx-movie">
            <iframe width="560" height="315" src="https://www.youtube.com/embed/dBhgsmC78Yw?rel=0" frameborder="0" allowfullscreen></iframe>
          </div>
        </div>
        <div class="col-sm-6">
          <blockquote>
            <p>Letâ€™s imagine an online banking website containing different features like a chat box, exchange rates, stock data and user profile information. The site has a high performance characteristic, despite its complexity and target publishing channels.
              All those features come from different providers/vendors having their own teams working in various modes, technologies and release cycles.
              Knot.x connects all of them in a controlled and isolated way, preventing any undesired interferences. It combines asynchronous programming principles and message-driven architecture providing a scalable platform for modern sites.
              Knot.x connects all of the above to create a unified customer experience.
            </p>
          </blockquote>
        </div>
      </div>
    </div>
  </div>

  <div class="diagram gray-background">
    <div class="container">
      <div class="row">
        <div class="col-sm-1">
          <h2>System Administrator</h2>
          <p>
            manages the platform
          </p>
        </div>
        <div class="col-sm-2">
          <h2>Experience Manageable Integrations + Continuous Replatforming</h2>
          <p>
            combines various systems in a controlled and isolated way, preventing any
            undesired interferences; gradually embed new systems, CMSes on your website
          </p>
        </div>
        <div class="col-sm-2">
          <h2>Resilience</h2>
          <p>
            keeps your platform always available. Even if a module breaks, it can redeploy
            themselves into a new location/server
          </p>
        </div>
        <div class="col-sm-2">
          <h2>Microservices 2.0</h2>
          <p>
            fine-grained modular integration logic (modules with precise responsibility) with
            manageable contracts, allowing them to be scaled separately without affecting the
            codebase
          </p>
        </div>
        <div class="col-sm-2">
          <h2>Scaling</h2>
          <p>
            integration logic can be precisely scaled vertically and horizontally, the platform
            provides load balancing for free (the platform implements reactive principles)
          </p>
        </div>
        <div class="col-sm-1">
          <h2>Extendable & Polyglot</h2>
          <p>
            extension points supporting multiple programming languages
          </p>
        </div>
        <div class="col-sm-2">
          <h2>Channels / Users</h2>
          <p>
            the IoT is coming, modern platforms have to support both different channels like tablets,
            mobiles, computers and other applications. With Knot.x you can address the need of
            any channel, SPA, etc.
          </p>
        </div>
        <div class="row">
          <div class="col-sm-12">
            <img src="img/knotx-platform-overview.png" class="img-responsive img-centered" alt="Knot.x Platform Overview"/>
          </div>
        </div>
      </div>
    </div>
  </div>


  <!-- Features -->
  <div class="feature white-background">
    <div class="container">
      <div class="row">
        <div class="col-sm-6">
          <h2>Manageable Integrations</h2>
          <p>
            Knot.x can combine experiences of the legacy CMS and the Adobe Experience Manager (or
            other modern CMS) together with a dynamic data from CRM. The integration can be gradually
            introduced, first by integrating AEM driven components, then dynamic components from CRM.
            Knot.x allows to integrate with all kind of systems from CRMs via custom web-services to
            low-level storages like databases, caches.
          </p>
        </div>
        <div class="col-sm-5 col-sm-offset-1">
          <img src="img/knotx-manageable-integrations.png" class="img-responsive img-centered" alt=""/>
        </div>
      </div>
    </div>
  </div>
  <!-- Forms -->
  <div class="feature gray-background">
    <div class="container">
      <div class="row">
        <div class="col-sm-5">
          <img src="img/knotx-resilience.png" class="img-responsive img-centered" alt=""/>
        </div>
        <div class="col-sm-6 col-sm-offset-1 text-right">
          <h2>Resilience</h2>
          <p>
            Knot.x supports simple and multi-step forms. Easily handles submission errors,
            form validations and redirects. Knot.x allows you to define a graph of
            interconnected steps, responding to user input or site visitor choices.
          </p>
        </div>
      </div>
    </div>
  </div>
  <!-- Prototyping -->
  <div class="feature white-background">
    <div class="container">
      <div class="row">
        <div class="col-sm-6">
          <h2>Microservices 2.0</h2>
          <p>
            Knot.x was build with micro-services principles in mind, all modules are are <b>independent</b>
            on each other. Each module can run on different data center or host keeping the
            intercommunication behind the scene. Unified communication between modules over the
            internal <b>event bus</b> hides the communication complexity and enables you to build each module
            in languages other than java (<b>ruby</b>, <b>groovy</b>, <b>java script</b>, <b>kotlin</b>, <b>scala</b>).
          </p>
        </div>
        <div class="col-sm-5 col-sm-offset-1">
          <img src="img/knotx-microservices.png" class="img-responsive img-centered" alt=""/>
        </div>
      </div>
    </div>
  </div>
  <!-- Extensions -->
  <div class="feature gray-background">
    <div class="container">
      <div class="row">
        <div class="col-sm-5 col-sm-offset-1">
          <img src="img/knotx-scaling.png" class="img-responsive img-centered" alt=""/>
        </div>
        <div class="col-sm-6 text-right">
          <h2>Scaling</h2>
          <p>
            Scalability is the knot.x first citizen, thanks to the modularity you can scale each
            module vertically (on one host) and/or horizontally (over multiple hosts) to get best
            possible performance or response to an unexpected huge load. With message-driven
            architecture, scaling does not affect the codebase at all.
          </p>
        </div>
      </div>
    </div>
  </div>
  <!-- Learn more -->
  <div class="feature learn-more">
    <div class="container">
      <div class="row">
        <div class="col-sm-12 text-center">
          <h2>Ready to learn more?</h2>
          <p>
            <a href="<%= @getSectionLink('wiki') %>" class="btn btn-default btn-lg doc-btn">Explore the Docs</a>
            <a href="<%= @getSectionLink('tutorials') %>" class="btn btn-default btn-lg doc-btn">Explore the Tutorials</a>
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
